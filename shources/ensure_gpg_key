#!/bin/bash

shource log()
function ensure_gpg_key()
{(
    set +x

    # Fetch the gpg key. If that fails, and we have it, then just move on
    local key="$1"
    local keyservers="${2:-${GPG_KEYSERVER:-}}"
    local wait_time="${3:-10}"
    local key_fetch_result=""
    local keyserver

    # Ensure keyservers is an array of either keyservers or one empty element
    if [[ $keyservers != "" ]]; then
        log 1 "Called ensure_gpg_keys with keyserver list: $keyservers"
        keyservers=( $( echo "$keyservers" | tr ',;' ' ' ) )
    else
        keyservers=( "" )
    fi

    while true; do
        for keyserver in "${keyservers[@]}"; do
            local args=()

            if [[ $keyserver != "" ]]; then
                args+=( --keyserver "$keyserver" )
            fi
            args+=( --no-tty --recv-key "$key" )

            if gpg "${args[@]}"; then
                log 0 "Got GPG key${keyserver:+ from $keyserver}: $key"
                return 0
            elif gpg --no-tty --list-key "$key"; then
                log 0 "Already have GPG key: $key"
                return 0
            else
                log 2 "Waiting for GPG key${keyserver:+ from $keyserver}: $key"
            fi
        done
        sleep $wait_time
    done

    return 0
)}
export -f ensure_gpg_key
